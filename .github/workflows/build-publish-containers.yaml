name: Build and Push Docker Images to GHCR

on:
  workflow_dispatch:
  schedule:
    - cron: '0 9 * * 1'  # Runs every Monday at 9 AM

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Dockerfiles and build/push images
        id: build_and_push
        run: |
          # Find all Dockerfiles under the managed-containers directory
          dockerfiles=$(find ./managed-containers -name 'Dockerfile')

          # Iterate over each Dockerfile found
          for dockerfile in $dockerfiles; do
            # Get the directory of the Dockerfile
            dockerfile_dir=$(dirname $dockerfile)

            # Generate a unique image name based on the directory name
            base_name="ghcr.io/${{ github.repository_owner }}/$(basename $dockerfile_dir)"
            
            # Convert the image name to lowercase
            image_name=$(echo $base_name | tr '[:upper:]' '[:lower:]')

            # Build the Docker image
            docker build -t $image_name:latest $dockerfile_dir

            # Push the Docker image with the 'latest' tag to GitHub Container Registry
            docker push $image_name:latest

            # Clean up dangling images to free up space
            docker image prune -f

            # Associate the README with the Docker image
            if [ -f "$dockerfile_dir/README.md" ]; then
              readme_path="$dockerfile_dir/README.md"
            else
              readme_path="./README.md"
            fi

            # Encode the README file to base64
            readme_base64=$(base64 -w 0 $readme_path)

            # Update the container description with the README
            curl -X PATCH \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/orgs/${{ github.repository_owner }}/packages/container/$image_name/versions/latest \
              -d '{"description":"This is the README for the container image","readme":"'"$readme_base64"'"}'
          done