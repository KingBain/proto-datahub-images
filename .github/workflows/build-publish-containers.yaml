name: Build and Push Container to GHCR

on:
  workflow_dispatch:
  push:
    branches: [main]

env:
  GITHUB_SHA: ${{ github.sha }}
  REGISTRY: ghcr.io/${{ github.repository }}

permissions:
  id-token: write
  contents: write
  pull-requests: write
  actions: write
  checks: write
  statuses: write
  security-events: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.filter.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            managed-containers: 
              - 'managed-containers/**'


  build-push-and-deploy:
    if: needs.changes.outputs.images != '[]'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
    needs: changes
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.changes.outputs.images) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container
        working-directory: ./${{ matrix.image }}
        run: |
          docker build \
          --build-arg git_sha=$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:$GITHUB_SHA \
          -t $REGISTRY/${{ matrix.image }}:latest .

      - name: Push containers to GHCR
        run: |
          docker push $REGISTRY/${{ matrix.image }}:$GITHUB_SHA
          docker push $REGISTRY/${{ matrix.image }}:latest

      - name: Generate ${{ matrix.image }} docker SBOM
        uses: cds-snc/security-tools/.github/actions/generate-sbom@v3.1.0
        with:
          docker_image: ${{ env.REGISTRY }}/${{ matrix.image }}:${{ env.GITHUB_SHA }}
          sbom_name: ${{ matrix.image }}
          dockerfile_path: "${{ matrix.image }}/Dockerfile"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Logout of GHCR
        run: docker logout ghcr.io

      - name: Deploy lambda
        if: matrix.image == 'csp_violation_report_service'
        run: |
          aws lambda update-function-code \
            --function-name "${{ matrix.image }}" \
            --image-uri $REGISTRY/${{ matrix.image }}:$GITHUB_SHA > /dev/null 2>&1
